{"uid":"7a79861ce574367c","name":"test_login_with_empty_fields[chrome]","fullName":"tests.test_login.TestLogin#test_login_with_empty_fields","historyId":"fbc60693741734408df8e58d248a0e83","time":{"start":1731024006102,"stop":1731024016143,"duration":10041},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@name =\"username\"]\"}\n  (Session info: chrome=130.0.6723.92); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0073EBD3+24307]\n\t(No symbol) [0x006C8D74]\n\t(No symbol) [0x005AC323]\n\t(No symbol) [0x005EDC86]\n\t(No symbol) [0x005EDECB]\n\t(No symbol) [0x0062B9F2]\n\t(No symbol) [0x0060FED4]\n\t(No symbol) [0x00629579]\n\t(No symbol) [0x0060FC26]\n\t(No symbol) [0x005E219C]\n\t(No symbol) [0x005E311D]\n\tGetHandleVerifier [0x009E8D93+2818227]\n\tGetHandleVerifier [0x00A4542E+3196750]\n\tGetHandleVerifier [0x00A3D9D2+3165426]\n\tGetHandleVerifier [0x007DDA70+675216]\n\t(No symbol) [0x006D1B3D]\n\t(No symbol) [0x006CEA18]\n\t(No symbol) [0x006CEBB5]\n\t(No symbol) [0x006C1640]\n\tBaseThreadInitThunk [0x760D5D49+25]\n\tRtlInitializeExceptionChain [0x776BCEBB+107]\n\tRtlGetAppContainerNamedObjectPath [0x776BCE41+561]","statusTrace":"self = <tests.test_login.TestLogin object at 0x000002B48F94D590>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1843814a6ba348af63e525eaa269ea4b\")>\nrequest = <FixtureRequest for <Function test_login_with_empty_fields[chrome]>>\n\n    def test_login_with_empty_fields(self,setup, request):\n        self.logger.info(\"***************verifying the test_login_with_empty_fields****************\")\n    \n        driver = setup\n        login= Login(driver)\n>       login.set_username(\"\")\n\ntests\\test_login.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\login_page.py:19: in set_username\n    element = self.driver.find_element(By.XPATH, self.textbox_email)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002B48FD5E350>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x776BCEBB+107]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x776BCE41+561]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@name =\"username\"]\"}\nE         (Session info: chrome=130.0.6723.92); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0073EBD3+24307]\nE       \t(No symbol) [0x006C8D74]\nE       \t(No symbol) [0x005AC323]\nE       \t(No symbol) [0x005EDC86]\nE       \t(No symbol) [0x005EDECB]\nE       \t(No symbol) [0x0062B9F2]\nE       \t(No symbol) [0x0060FED4]\nE       \t(No symbol) [0x00629579]\nE       \t(No symbol) [0x0060FC26]\nE       \t(No symbol) [0x005E219C]\nE       \t(No symbol) [0x005E311D]\nE       \tGetHandleVerifier [0x009E8D93+2818227]\nE       \tGetHandleVerifier [0x00A4542E+3196750]\nE       \tGetHandleVerifier [0x00A3D9D2+3165426]\nE       \tGetHandleVerifier [0x007DDA70+675216]\nE       \t(No symbol) [0x006D1B3D]\nE       \t(No symbol) [0x006CEA18]\nE       \t(No symbol) [0x006CEBB5]\nE       \t(No symbol) [0x006C1640]\nE       \tBaseThreadInitThunk [0x760D5D49+25]\nE       \tRtlInitializeExceptionChain [0x776BCEBB+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x776BCE41+561]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1731024002739,"stop":1731024006100,"duration":3361},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"afterStages":[{"name":"setup::0","time":{"start":1731024016243,"stop":1731024018515,"duration":2272},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"blocker"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"Karim-Meet-Tech"},{"name":"thread","value":"9776-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"setup","value":"'chrome'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"7a79861ce574367c.json","parameterValues":["'chrome'"]}